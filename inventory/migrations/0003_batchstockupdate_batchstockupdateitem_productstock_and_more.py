# Generated by Django 5.2 on 2025-04-21 05:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0002_initial'),
        ('products', '0002_add_initial_categories_and_brands'),
        ('users', '0003_customer'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BatchStockUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('update_type', models.CharField(choices=[('PURCHASE', 'Purchase'), ('SALE', 'Sale'), ('RETURN', 'Return'), ('ADJUSTMENT', 'Adjustment'), ('TRANSFER', 'Transfer')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BatchStockUpdateItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('serial_numbers', models.TextField(blank=True, help_text='Enter serial numbers separated by commas')),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('minimum_stock', models.PositiveIntegerField(default=5)),
                ('reorder_point', models.PositiveIntegerField(default=10)),
                ('reorder_quantity', models.PositiveIntegerField(default=20)),
                ('last_restock_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('PROCESSED', 'Processed'), ('COMPLETED', 'Completed')], default='PENDING', max_length=20)),
                ('action', models.CharField(blank=True, choices=[('REFUND', 'Refund'), ('REPLACE', 'Replace'), ('REPAIR', 'Repair')], max_length=20, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SerialNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('IN_STOCK', 'In Stock'), ('SOLD', 'Sold'), ('RESERVED', 'Reserved'), ('DEFECTIVE', 'Defective'), ('RETURNED', 'Returned')], default='IN_STOCK', max_length=20)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('warranty_start', models.DateField(blank=True, null=True)),
                ('warranty_end', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='WarrantyClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('IN_REPAIR', 'In Repair'), ('COMPLETED', 'Completed')], default='PENDING', max_length=20)),
                ('action', models.CharField(blank=True, choices=[('REPAIR', 'Repair'), ('REPLACE', 'Replace'), ('REFUND', 'Refund')], max_length=20, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveIndex(
            model_name='stocktransaction',
            name='inventory_s_product_94c743_idx',
        ),
        migrations.RemoveIndex(
            model_name='stocktransaction',
            name='inventory_s_transac_f888de_idx',
        ),
        migrations.RemoveField(
            model_name='stocktransaction',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='stocktransaction',
            name='price_per_unit',
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='performed_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='reference_number',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='stocktransaction',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product'),
        ),
        migrations.AlterField(
            model_name='stocktransaction',
            name='quantity',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='stocktransaction',
            name='transaction_type',
            field=models.CharField(choices=[('PURCHASE', 'Purchase'), ('SALE', 'Sale'), ('RETURN', 'Return'), ('ADJUSTMENT', 'Adjustment'), ('TRANSFER', 'Transfer')], max_length=20),
        ),
        migrations.AddField(
            model_name='batchstockupdate',
            name='performed_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='batchstockupdateitem',
            name='batch_update',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.batchstockupdate'),
        ),
        migrations.AddField(
            model_name='batchstockupdateitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product'),
        ),
        migrations.AddField(
            model_name='productstock',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_records', to='products.product'),
        ),
        migrations.AddField(
            model_name='return',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_returns', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='return',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.customer'),
        ),
        migrations.AddField(
            model_name='return',
            name='processed_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_returns', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='return',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product'),
        ),
        migrations.AddField(
            model_name='serialnumber',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='serial_numbers', to='products.product'),
        ),
        migrations.AddField(
            model_name='return',
            name='serial_number',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.serialnumber'),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='serial_numbers',
            field=models.ManyToManyField(blank=True, to='inventory.serialnumber'),
        ),
        migrations.AddField(
            model_name='productstock',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.stocklocation'),
        ),
        migrations.AddField(
            model_name='batchstockupdate',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.stocklocation'),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='destination_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destination_transactions', to='inventory.stocklocation'),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='source_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_transactions', to='inventory.stocklocation'),
        ),
        migrations.AddIndex(
            model_name='stocktransaction',
            index=models.Index(fields=['product', 'transaction_type'], name='inventory_s_product_044e01_idx'),
        ),
        migrations.AddField(
            model_name='warrantyclaim',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_warranty_claims', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='warrantyclaim',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.customer'),
        ),
        migrations.AddField(
            model_name='warrantyclaim',
            name='processed_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_warranty_claims', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='warrantyclaim',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product'),
        ),
        migrations.AddField(
            model_name='warrantyclaim',
            name='serial_number',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.serialnumber'),
        ),
        migrations.AddIndex(
            model_name='return',
            index=models.Index(fields=['status'], name='inventory_r_status_5ee203_idx'),
        ),
        migrations.AddIndex(
            model_name='return',
            index=models.Index(fields=['created_at'], name='inventory_r_created_761f55_idx'),
        ),
        migrations.AddIndex(
            model_name='productstock',
            index=models.Index(fields=['product', 'location'], name='inventory_p_product_36295a_idx'),
        ),
        migrations.AddIndex(
            model_name='productstock',
            index=models.Index(fields=['quantity'], name='inventory_p_quantit_8d5f2d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productstock',
            unique_together={('product', 'location')},
        ),
        migrations.AddIndex(
            model_name='warrantyclaim',
            index=models.Index(fields=['status'], name='inventory_w_status_2174e9_idx'),
        ),
        migrations.AddIndex(
            model_name='warrantyclaim',
            index=models.Index(fields=['created_at'], name='inventory_w_created_7c4ba3_idx'),
        ),
    ]
